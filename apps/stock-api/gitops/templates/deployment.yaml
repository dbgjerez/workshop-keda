apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.service.name | quote }}
    app: {{ .Values.service.name | quote }}
    version: {{ .Values.service.version | quote }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      name: {{ .Values.service.name | quote }}
  template:
    metadata:
      labels:
        name: {{ .Values.service.name | quote }}
        version: {{ .Values.service.version | quote }}
    spec:
      serviceAccountName: {{ .Values.service.name }}
      volumes:
        - name: clientcer
          secret: 
            secretName: "kafka-connection"
            items:
            - key: client.cer.pem
              path: client.cer.pem
        - name: clientkey
          secret: 
            secretName: "kafka-connection"
            items:
            - key: client.key.pem
              path: client.key.pem
        - name: servercer
          secret: 
            secretName: "kafka-connection"
            items:
            - key: server.cer.pem
              path: server.cer.pem
      containers:
        - name: {{ .Values.service.name }}
          image: {{ .Values.service.image }}:{{ .Values.service.version }}
          volumeMounts:
            - name: clientcer
              mountPath: "client.cer.pem"
              readOnly: true
            - name: clientkey
              mountPath: "client.key.pem"
              readOnly: true
            - name: servercer
              mountPath: "server.cer.pem"
              readOnly: true
          env:
          {{- range .Values.config.env }}
          {{- $envItem := . -}}
          {{- with $ }}
            - name: {{ $envItem.name | upper |  replace "-" "_" | quote}}
              value: {{ $envItem.value | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.health.liveness }}
              port: http
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.health.readiness }}
              port: http
            failureThreshold: 10
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
---